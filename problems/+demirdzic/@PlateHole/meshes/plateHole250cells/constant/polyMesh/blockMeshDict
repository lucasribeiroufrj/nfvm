/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.0                                |
|   \\  /    A nd           | Web:         http://www.extend-project.de       |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    (0.5 0 0)
    (1 0 0)
    (2 0 0)
    (2 0.707107 0)
    (0.707107 0.707107 0)
    (0.353553 0.353553 0)
    (2 2 0)
    (0.707107 2 0)
    (0 2 0)
    (0 1 0)
    (0 0.5 0)
    (0.5 0 1)
    (1 0 1)
    (2 0 1)
    (2 0.707107 1)
    (0.707107 0.707107 1)
    (0.353553 0.353553 1)
    (2 2 1)
    (0.707107 2 1)
    (0 2 1)
    (0 1 1)
    (0 0.5 1)
);

blocks
(
    hex (5 4 9 10 16 15 20 21) aluminium (5 5 1) simpleGrading (1 1 1)
    hex (0 1 4 5 11 12 15 16) aluminium (5 5 1) simpleGrading (1 1 1)
    hex (1 2 3 4 12 13 14 15) steel (10 5 1) simpleGrading (1 1 1)
    hex (4 3 6 7 15 14 17 18) steel (10 10 1) simpleGrading (1 1 1)
    hex (9 4 7 8 20 15 18 19) steel (5 10 1) simpleGrading (1 1 1)
);

edges
(
    arc 0 5 (0.469846 0.17101 0)
    arc 5 10 (0.17101 0.469846 0)
    arc 1 4 (0.939693 0.34202 0)
    arc 4 9 (0.34202 0.939693 0)
    arc 11 16 (0.469846 0.17101 1)
    arc 16 21 (0.17101 0.469846 1)
    arc 12 15 (0.939693 0.34202 1)
    arc 15 20 (0.34202 0.939693 1)
);

boundary
(
    left
    {
        type wall;
        faces
        (
             (8 9 20 19)
             (9 10 21 20)
        );
    }
    right
    {
        type wall;
        faces
        (
            (2 3 14 13)
            (3 6 17 14)
        );
    }
    bottom
    {
        type wall;
        faces
        (
            (0 1 12 11)
            (1 2 13 12)
        );
    }
    top
    {
        type wall;
        faces
        (
        (7 8 19 18)
        (6 7 18 17)
        );
    }
    hole
    {
        type wall;
        faces
        (
            (10 5 16 21)
            (5 0 11 16)
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            (10 9 4 5)
            (5 4 1 0)
            (1 4 3 2)
            (4 7 6 3)
            (4 9 8 7)
            (21 16 15 20)
            (16 11 12 15)
            (12 13 14 15)
            (15 14 17 18)
            (15 18 19 20)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
